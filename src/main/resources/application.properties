spring.application.name=pg-service
server.port=8000
#spring.datasource.url=jdbc:mysql://pg-service-db.clwwo2mwyy1x.ap-south-1.rds.amazonaws.com:3306/pg_db?createDatabaseIfNotExist=true
spring.datasource.url=jdbc:mysql://localhost:3306/pg_app?createDatabaseIfNotExist=true
spring.datasource.username=admin
spring.datasource.password=pg-service-db
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update

## Second DataSource With Postgres
#spring.datasource.postgres.url=jdbc:mysql://localhost:5432/notification-db
#spring.datasource.postgres.username=username
#spring.datasource.postgres.password=password
#spring.datasource.postgres.driverClassName=org.postgresql.Driver
#===================================
verify.otp.time.duration=5
dynamodb.table.name=PG-LOCAL-AUTH
region=ap-south-1
access.key={asm}ACCESS_KEY
secret.key={asm}SECRET_KEY
security.jwt.secret-key=3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b
security.jwt.expiration-time=5
server.forward-headers-strategy=framework
spring.thread.virtual.enable=true
kafka.bootstrap.address=localhost:9092
kafka.consumer.group=kunj-group-1
spring.kafka.consumer.auto-offset-reset=earliest
kafka.topic.name=payment-topic
spring.profiles.active=local
aws.s3.bucket.name=pg-profile-image-bucket
logging.file.name=pg.log`

logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread/%X{userId}] %-7level %logger{20} - %msg [%file:%line]%n
s3.profile.image.location=https://pg-profile-image-bucket.s3.ap-south-1.amazonaws.com/
s3.file.access.key={asm}S3_ACCESS_KEY
s3.file.secret.key={asm}S3_SECRET_KEY